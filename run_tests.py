#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
import sys
import os

def run_tests_for_bot(bot_name, bot_path):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–æ—Ç–∞"""
    print(f"\nüß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –¥–ª—è {bot_name}...")
    
    if not os.path.exists(bot_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ {bot_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    test_path = os.path.join(bot_path, 'tests')
    if not os.path.exists(test_path):
        print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Ç–µ—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {test_path}")
        return False
    
    try:
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –±–æ—Ç–∞
        original_dir = os.getcwd()
        os.chdir(bot_path)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
        result = subprocess.run([
            sys.executable, '-m', 'unittest', 'discover', 'tests', '-v'
        ], capture_output=True, text=True)
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∏—Å—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
        os.chdir(original_dir)
        
        if result.returncode == 0:
            print(f"‚úÖ –¢–µ—Å—Ç—ã {bot_name} –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –¢–µ—Å—Ç—ã {bot_name} –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å:")
            print(result.stdout)
            print(result.stderr)
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ {bot_name}: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö unit-—Ç–µ—Å—Ç–æ–≤...")
    
    # –°–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    bots = [
        ("Telescan Bot", "Telescan_bot"),
        ("MineServ Bot", "MineServ_bot"),
        ("Manager Bot", "Mather_bots")
    ]
    
    total_tests = len(bots)
    passed_tests = 0
    
    for bot_name, bot_path in bots:
        if run_tests_for_bot(bot_name, bot_path):
            passed_tests += 1
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed_tests}/{total_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total_tests - passed_tests}/{total_tests}")
    
    if passed_tests == total_tests:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
        return 1

if __name__ == '__main__':
    sys.exit(main()) 