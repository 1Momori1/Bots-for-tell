#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import subprocess
import sys
import os
import time
import signal
import psutil

def start_bot(bot_name, bot_path):
    """–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–ø–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if not os.path.exists(bot_path):
            print(f"‚ùå –ü–∞–ø–∫–∞ {bot_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return None
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ main.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        main_file = os.path.join(bot_path, 'main.py')
        if not os.path.exists(main_file):
            print(f"‚ùå –§–∞–π–ª main.py –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {bot_path}")
            return None
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        if os.name == 'nt':  # Windows
            process = subprocess.Popen(
                [sys.executable, main_file],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                creationflags=subprocess.CREATE_NEW_CONSOLE,
                cwd=bot_path  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            )
        else:  # Linux/Android
            process = subprocess.Popen(
                [sys.executable, main_file],
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                cwd=bot_path  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–±–æ—á—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            )
        
        print(f"‚úÖ {bot_name} –∑–∞–ø—É—â–µ–Ω (PID: {process.pid})")
        return process
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ {bot_name}: {e}")
        return None

def stop_bot(process, bot_name):
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞"""
    if process and process.poll() is None:
        try:
            process.terminate()
            process.wait(timeout=5)
            print(f"‚èπÔ∏è {bot_name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except subprocess.TimeoutExpired:
            process.kill()
            print(f"üî™ {bot_name} –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ {bot_name}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –±–æ—Ç–æ–≤...")
    
    # –°–ø–∏—Å–æ–∫ –±–æ—Ç–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    bots = [
        ("Telescan Bot", "Telescan_bot"),
        ("MineServ Bot", "MineServ_bot"),
        ("Manager Bot", "Mather_bots")
    ]
    
    processes = []
    
    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤
        for bot_name, bot_path in bots:
            if os.path.exists(bot_path):
                process = start_bot(bot_name, bot_path)
                if process:
                    processes.append((process, bot_name))
                time.sleep(2)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—É—Å–∫–∞–º–∏
            else:
                print(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ {bot_path} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        
        print(f"\nüéâ –ó–∞–ø—É—â–µ–Ω–æ –±–æ—Ç–æ–≤: {len(processes)}")
        print("üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C")
        
        # –ñ–¥–µ–º —Å–∏–≥–Ω–∞–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        while True:
            time.sleep(1)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É–ø–∞–ª –ª–∏ –∫–∞–∫–æ–π-—Ç–æ –±–æ—Ç
            for process, bot_name in processes[:]:
                if process.poll() is not None:
                    print(f"‚ö†Ô∏è {bot_name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ")
                    processes.remove((process, bot_name))
    
    except KeyboardInterrupt:
        print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤
        for process, bot_name in processes:
            stop_bot(process, bot_name)
        
        print("‚úÖ –í—Å–µ –±–æ—Ç—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ—Ö –±–æ—Ç–æ–≤ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        for process, bot_name in processes:
            stop_bot(process, bot_name)

if __name__ == '__main__':
    main() 